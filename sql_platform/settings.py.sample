"""
Django settings for sql project.

Generated by 'django-admin startproject' using Django 3.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

import ibm_db
import ibm_db_dbi
import ibm_db_django


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# - 动态配置 - #
from conf.env import *

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "YOUR_KEY"

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False

# Logger
from utils.logger import *

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    #    "rest_framework",
    #    "drf_yasg",
    "explorer",
    "dbmng",
]

MIDDLEWARE = [
    "django.middleware.cache.UpdateCacheMiddleware",  # 缓存中间件，update 必须在列表的第一位
    "django.middleware.security.SecurityMiddleware",  # 安全中间件
    "django.contrib.sessions.middleware.SessionMiddleware",  # 会话中间件
    "django.middleware.common.CommonMiddleware",  # 通用中间件
    "django.middleware.csrf.CsrfViewMiddleware",  # 跨站请求伪造保护中间件
    "django.contrib.auth.middleware.AuthenticationMiddleware",  # 验证中间件
    "django.contrib.messages.middleware.MessageMiddleware",  # 消息中间件
    "django.middleware.clickjacking.XFrameOptionsMiddleware",  # 点击劫持保护中间件
    "django.middleware.cache.FetchFromCacheMiddleware",  # 缓存中间件，fetch 必须在最后
]

ROOT_URLCONF = "sql_platform.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "sql_platform.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "default",
        "HOST": "127.0.0.1",
        "USER": "USER",
        "PASSWORD": "YOUR_PW",
        "PORT": 3306,
    },
    "db2": {
        "ENGINE": "ibm_db_django",
        "NAME": "db2inst1",
        "HOST": "127.0.0.1",
        "USER": "db2inst1",
        "PASSWORD": "PASSWORD",
        "PORT": 50000,
        "PCONNECT": True,
    },
}

# 合并外部数据库 (要求 Python 3.9+)
DATABASES |= DATABASES_EXTRA

# Redis
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "TIMEOUT": 60,
    }
}

CACHE_MIDDLEWARE_SECONDS = 60

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # 检查密码和一组用户属性集合之间的相似性。
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",  # 用来检查密码是否符合最小长度。可以自定义设置：默认8个字符。
        "OPTIONS": {
            "min_length": 8,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",  # 检查密码是否在常用密码列表中。
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",  # 检查密码是否是纯数字。
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# 本地化文件目录，高优先级，可覆盖一些模块不准确的基本翻译
LOCALE_PATHS = (os.path.join(BASE_DIR, "locale"),)

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

# IBM_DB 不支持 TZ，不可启用
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# 收集静态文件给 Nginx
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# REST Framework settings
# REST_FRAMEWORK = {
#    "DEFAULT_PERMISSION_CLASSES": [
#        "rest_framework.permissions.IsAuthenticated",  # 只有经过身份认证确定用户身份才能访问
#        # 'rest_framework.permissions.IsAdminUser', # is_staff=True才能访问 —— 管理员(员工)权限, 非 superuser
#        # 'rest_framework.permissions.AllowAny', # 允许所有
#        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly', # 经过身份认证或者只读访问
#    ],
# }

# 关闭 SWAGGER 验证器
# SWAGGER_SETTINGS = {"VALIDATOR_URL": None}

# - SimpleUI 配置 - #
SIMPLEUI_ANALYSIS = False
SIMPLEUI_HOME_INFO = False
SIMPLEUI_STATIC_OFFLINE = True
SIMPLEUI_DEFAULT_THEME = "light.css"
SIMPLEUI_ICON = {
    "数据库管理": "fas fa-database",
    "数据库列表": "fas fa-database",
    "SQL平台": "fas fa-laptop-code",
    "查询日志": "fas fa-history",
    "查询语句": "fas fa-file-code",
}
SIMPLEUI_LOGO = "/static/logo.png"

# - SQL 平台配置 - #
# 导入外部连接列表
from conf.explorer import *

# SQL 平台默认连接库
EXPLORER_DEFAULT_CONNECTION = "default"

# 不受管理面板影响的连接列表默认配置，避免错误配置导致无法启动，可以添加多个。
# 字典格式，Key=可读名称，Value=DATABASES 中定义的数据库名。
EXPLORER_CONNECTIONS = {
    "Django": "default",
    "Playground": "db2", 
}

# 合并外部连接列表 (要求 Python 3.9+)
EXPLORER_CONNECTIONS |= EXPLORER_CONNECTIONS_EXTRA

# 用户白名单，有权限执行修改类 SQL（无视 SQL 黑名单），谨慎添加
EXPLORER_USER_WHITELIST = ("DBA",)

# SQL 黑名单
EXPLORER_SQL_BLACKLIST = (
    "ALTER",
    "RENAME ",
    "DROP",
    "TRUNCATE",
    "INSERT INTO",
    "UPDATE",
    "REPLACE",
    "DELETE",
    "CREATE TABLE",
    "GRANT",
    "OWNER TO",
    "SET",
)

# 从表结构显示中隐藏以下前缀的表
EXPLORER_SCHEMA_EXCLUDE_TABLE_PREFIXES = (
    "auth_",
    "contenttypes_",
    "sessions_",
    "admin_",
)
